name: ibotta/atomic_cache
on:
  push:
    branches:
    - "main"
  pull_request:

# This allows a subsequently queued workflow run to interrupt previous runs
# concurrency:
#   group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'

permissions:
  contents: write
  pull-requests: read

env:
  RUBYGEMS_API_TOKEN: "${{ secrets.RUBYGEMS_API_TOKEN }}"
  HEAD_COMMIT_MESSAGE: ${{ github.event.head_commit.message }}

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ruby: ['2.7', '3.0', '3.1', '3.2']
        gemfile:
        - Gemfile.rails61
        - Gemfile.rails7
    env:
      BUNDLE_GEMFILE: ${{ matrix.gemfile }}
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true
        ruby-version: ${{ matrix.ruby }}
    - name: Test
      run: bundle exec rake spec

  tag_new_release_if_applicable:
    needs:
    - test
    runs-on: ubuntu-latest
    if: ${{ github.ref_name == 'main' && github.event_name != 'pull_request' }}
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.2
        bundler-cache: true
    - name: Kickoff Release Pipeline
      run: "bundle exec ./ci-helpers/gem_helper kickoff_release_pipeline"

  publish_gem_if_applicable:
    needs:
    - test
    - tag_new_release_if_applicable
    runs-on: ubuntu-latest
    if: ${{ github.ref_name == 'main' && github.event_name != 'pull_request' }}
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.2
        bundler-cache: true
    - name: Publish
      run: |-
        mkdir -p ~/.ssh
        ssh-keyscan -H github.com >> ~/.ssh/known_hosts
        bundle exec ./ci-helpers/gem_helper publish
