#!/usr/bin/env ruby

require './lib/atomic_cache/version'
require 'bundler/gem_helper'
require 'gems'
require 'git'
require 'logger'
require 'octokit'
require 'rake'
require 'rubygems'

GEM_NAME = 'atomic_cache'.freeze
RELEASE_COMMIT_PREFIX = '[release]'.freeze

module AtomicCacheCi
  class GemHelper
    def initialize
      Gems.configure do |config|
        config.key = ENV['RUBYGEMS_API_TOKEN']
      end
    end

    def kickoff_release_pipeline
      return if release_commit?

      puts('Determining if a new release tag is required...')

      create_release_commit if repo_has_newer_version_than_rubygems?
    end

    def publish
      return unless release_commit?

      # create a github release first
      github_release

      # publish to rubygems
      gemfile = gemhelper.build_gem
      Gems.push(File.new(gemfile))
    end

    private

    def gemhelper
      @gemhelper ||= Bundler::GemHelper.new(nil, GEM_NAME)
    end

    def git_client
      @git_client ||= Git.open('.', log: Logger.new(STDOUT))
    end

    def local_version
      AtomicCache::VERSION
    end

    def release_commit?
      ENV['HEAD_COMMIT_MESSAGE'].start_with?(RELEASE_COMMIT_PREFIX)
    end

    def repo_has_newer_version_than_rubygems?
      git_version_str = version(:local) do
        local_version
      end

      remote_version_str = version(:rubygems) do
        Gems.info(GEM_NAME)['version']
      end

      if Gem::Version.new(git_version_str) > Gem::Version.new(remote_version_str)
        puts 'The version in the repository is newer than what is on rubygems.org.'
        true
      else
        puts 'The version in the repository is not newer than what is on rubygems.org'
        false
      end
    end

    def version(source)
      puts "Fetching #{GEM_NAME} version from #{source}"

      version = yield
      raise("Error fetching #{source} version! ABORT.") if version.nil?

      puts "#{GEM_NAME} version on #{source} is #{version}"
      version
    end

    def create_release_commit
      # generate the changelog
      puts "Generating changelog"
      rake = Rake.application
      rake.init
      rake.load_rakefile
      rake['changelog'].invoke

      # commit it to main
      puts "Creating changelog commit"
      git = git_client
      git.checkout('main')
      git.reset
      git.add('CHANGELOG.md')

      puts "Committing changelog to git"
      git.commit("#{RELEASE_COMMIT_PREFIX} #{local_version}")
      git.push('deploy', 'main')
    end

    def github_release
      github = Octokit::Client.new(access_token: ENV['GITHUB_TOKEN'])
      tag = "v#{local_version}"
      github.create_release("Ibotta/#{GEM_NAME}", tag,
        tag_name: tag,
        target_commitish: 'main',
        name: "atomic_cache release #{local_version}",
        body: "See [changelog](https://github.com/Ibotta/atomic_cache/blob/#{tag}/CHANGELOG.md)",
        prerelease: local_version.include?('.rc')
      )
    end
  end
end

if !ENV['CI']
  raise('This script should only be used by Travis in a CI enviornment.')
end

cmd = ARGV.first
case cmd
when 'kickoff_release_pipeline'
  AtomicCacheCi::GemHelper.new.kickoff_release_pipeline
when 'publish'
  AtomicCacheCi::GemHelper.new.publish
end
